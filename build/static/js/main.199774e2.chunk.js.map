{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseUrl","axios","get","newObj","post","id","put","delete","Notification","message","className","text","Filter","props","value","check","onChange","handleCheckChange","PersonForm","onSubmit","addPerson","newName","handleNameChange","newNumber","handleNumberChange","type","Persons","persons","remove","map","person","name","number","onClick","App","useState","setPersons","setNewName","setNewNumber","setCheck","setMessage","useEffect","personsService","then","response","data","personsToShow","filter","toLowerCase","includes","e","target","preventDefault","personObject","length","window","confirm","temp","setTimeout","catch","concat","error","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.199774e2.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst baseUrl = \"/api/persons\";\n\nconst getAll = () => {\n  return axios.get(baseUrl);\n};\n\nconst create = (newObj) => {\n  return axios.post(baseUrl, newObj);\n};\n\nconst update = (id, newObj) => {\n  return axios.put(`${baseUrl}/${id}`, newObj);\n};\n\nconst remove = (id) => {\n  return axios.delete(`${baseUrl}/${id}`);\n};\n\n// eslint-disable-next-line\nexport default {\n  getAll,\n  create,\n  update,\n  remove,\n};\n","import React, { useState, useEffect } from \"react\";\nimport personsService from \"./services/persons\";\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [check, setCheck] = useState(\"\");\n  const [message, setMessage] = useState(null);\n  useEffect(() => {\n    personsService.getAll().then((response) => setPersons(response.data));\n  }, []);\n\n  const addPerson = (e) => {\n    e.preventDefault();\n    const personObject = {\n      name: newName,\n      number: newNumber,\n    };\n    if (persons.filter((person) => person.name === newName).length > 0) {\n      if (\n        window.confirm(\n          `${newName} is already added to phonebook, replace the old number with new one?`\n        )\n      ) {\n        const id = persons.filter((person) => person.name === newName)[0].id;\n        personsService\n          .update(id, personObject)\n          .then((response) => {\n            const temp = persons.map((person) =>\n              person.id !== id ? person : response.data\n            );\n            setNewName(\"\");\n            setNewNumber(\"\");\n\n            setPersons(temp);\n            setMessage({\n              text: `${newName} was modified`,\n              className: \"notification\",\n            });\n            setTimeout(() => {\n              setMessage(null);\n            }, 5000);\n          })\n          .catch(() => {\n            setMessage({\n              text: `${newName} was removed from server`,\n              className: \"error\",\n            });\n            const temp = persons.filter((person) => person.id !== id);\n            setPersons(temp);\n          });\n      }\n    } else {\n      personsService.create(personObject).then((response) => {\n        setPersons(persons.concat(response.data));\n        setNewName(\"\");\n        setNewNumber(\"\");\n        setMessage({\n          text: `${newName} was added`,\n          className: \"notification\",\n        });\n        setTimeout(() => {\n          setMessage(null);\n        }, 5000);\n      });\n    }\n  };\n\n  const remove = (id, name) => {\n    if (window.confirm(`Delete ${name}?`)) {\n      personsService\n        .remove(id)\n        .then(() => {\n          const temp = persons.filter((person) => person.id !== id);\n          setPersons(temp);\n        })\n        .catch((error) => {\n          setMessage({\n            text: `${name} was already removed from server`,\n            className: \"error\",\n          });\n          setTimeout(() => {\n            setMessage(null);\n          }, 5000);\n          const temp = persons.filter((person) => person.id !== id);\n          setPersons(temp);\n        });\n    }\n  };\n\n  const handleNameChange = (e) => {\n    setNewName(e.target.value);\n  };\n  const handleNumberChange = (e) => {\n    setNewNumber(e.target.value);\n  };\n  const handleCheckChange = (e) => {\n    setCheck(e.target.value);\n  };\n\n  const personsToShow = persons.filter((person) =>\n    person.name.toLowerCase().includes(check.toLowerCase())\n  );\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message} />\n      <Filter check={check} handleCheckChange={handleCheckChange} />\n      <h2>add a new</h2>\n      <PersonForm\n        addPerson={addPerson}\n        newName={newName}\n        handleNameChange={handleNameChange}\n        newNumber={newNumber}\n        handleNumberChange={handleNumberChange}\n      />\n      <h2>Numbers</h2>\n      <Persons persons={personsToShow} remove={remove} />\n    </div>\n  );\n};\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null;\n  }\n  return <div className={message.className}>{message.text}</div>;\n};\n\nconst Filter = (props) => {\n  return (\n    <form>\n      filter shown with:\n      <input value={props.check} onChange={props.handleCheckChange} />\n    </form>\n  );\n};\n\nconst PersonForm = (props) => {\n  return (\n    <form onSubmit={props.addPerson}>\n      <div>\n        name: <input value={props.newName} onChange={props.handleNameChange} />\n      </div>\n      <div>\n        number:\n        <input value={props.newNumber} onChange={props.handleNumberChange} />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  );\n};\n\nconst Persons = ({ persons, remove }) => {\n  return (\n    <ul>\n      {persons.map((person) => (\n        <li key={person.id}>\n          {person.name} {person.number}{\" \"}\n          <button onClick={() => remove(person.id, person.name)}>delete</button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}